//
// Created by 82104 on 2023-02-10.
// 03 표현식의 평가 순서

# include <iostream>
using namespace std;

int main() {
// 01 우선 순위 (둘 이상의 연산자가 조합된 복잡한 표현)
// 1) 우선 순위가 가장 높은 단순한 표현식 평가, 결과 값으로 표현식 대체 -> 새로운 표현식이 만들어진다.
// 2) 모든 표현식이 평가될 때까지 1단계 반복

//// * 단순 표현식 평가
//    cout << "표현식의 결과 : " << 5 + 7 * 4 << endl;  // 33 => 5 + (7 * 4) = 5 + 28 = 33
//
//// * 복잡 표현식 평가
//    int result ;
//
//    result = 5 - 15 % 4;
//    cout << "result : " << result << endl;  // 2
//
//// * 괄호 표현하는 단순 표현식 평가
//    int i1 = 5;
//    cout << "(i1 + 5) * 7 값 : " << (i1 + 5) * 7 << endl;    // 70
//
//// * 부가 효과를 가진 단순 표현식 평가
//    int i2 = 8;
//    int i3 = 10;
//    i3 *= i2 + 5;   // i3 = i3 * (i2 + 5) = 130
//    cout << "i3 값 : " << i3 << endl;

// 02 결합 방향 (우선 순위가 같은 표현식이 여러개라면?)
// 1) 결합 방향 사용 - 왼쪽에서 -> 오른쪽 or 오른쪽에서 <- 왼쪽

// * 우선 순위와 결합 방향을 모두 고려한 경우의 평가 순서
    cout << "표현식 값 : " << 5 - 30 / 4 * 8 + 10 << endl;

// * 오른쪽에서 왼쪽(←)으로 결합 방향을 갖는 표현식
    int x = 10;
    int y = 20;

    y += x *= 40;

    cout << "x 값 : " << x << endl;  // 400
    cout << "y 값 : " << y << endl;  // 420


}